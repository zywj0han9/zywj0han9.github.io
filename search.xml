<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>家庭数据服务中心</title>
    <url>/HomeServer/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>搭建个人家庭数据服务中心的 idea 是因为在大学时想搭建 MC 游戏服务器，但是云服务器又贵性能又差，因此有了这个想法。</p>
<h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><span id="more"></span>

<table>
<thead>
<tr>
<th align="center">硬件</th>
<th align="center">设备名</th>
<th align="center">价格</th>
</tr>
</thead>
<tbody><tr>
<td align="center">CPU</td>
<td align="center">AMD EPYC 7D12 32 核 64 线程，1.1G 主频，3.0G 睿频</td>
<td align="center">680 元淘宝</td>
</tr>
<tr>
<td align="center">主板</td>
<td align="center">超微 H1SSL-i</td>
<td align="center">1250 元淘宝</td>
</tr>
<tr>
<td align="center">内存</td>
<td align="center">三星 ECC 2RX4 32G*2</td>
<td align="center">478 元淘宝</td>
</tr>
<tr>
<td align="center">固态</td>
<td align="center">西部数据 SN640 3.68T</td>
<td align="center">1159 淘宝</td>
</tr>
<tr>
<td align="center">机械</td>
<td align="center">希捷 12T*2</td>
<td align="center">599*2 元淘宝</td>
</tr>
<tr>
<td align="center">电源</td>
<td align="center">长城 850W</td>
<td align="center">549 元淘宝</td>
</tr>
<tr>
<td align="center">机箱</td>
<td align="center">先马黑洞</td>
<td align="center">279 元淘宝</td>
</tr>
<tr>
<td align="center">—</td>
<td align="center">—–</td>
<td align="center">5593 元</td>
</tr>
</tbody></table>
<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h3 id="系统选择"><a href="#系统选择" class="headerlink" title="系统选择"></a>系统选择</h3><p>家用服务器一般会有两个系统选择：<strong>ESXI</strong> 和 <strong>PVE</strong>，本家用服务器选择使用 PVE。</p>
<ul>
<li>ESXI：VMware ESXI，VMware 开发的企业级类型 I（type-1）Hypervisor，用于硬件虚拟化。作为类型 I（type-1）Hypervisor，ESXi 不是安装在操作系统上的软件应用程序，而是直接安装在硬件上并且集成了重要的操作系统组件，如内核。VMware ESXi 原名 ESX，2010 年 ESX4.1 版本发布后，VMware 将 ESX 更名为 ESXi。 <sup>[1]</sup></li>
<li>PVE：Proxmox VE，基于 Debian 使用 Ubuntu 的定制内核，包含安装程序，网页控制台和命令行工具，并且向第三方工具提供了 REST API 在 Affero 通用公共许可证第三版下发行。Proxmox VE 支持两类虚拟化技术：基于容器的 LXC（自 4.0 版开始，3.4 版及以前使用 OpenVZ 技术）和硬件抽象层全虚拟化的 KVM。<sup>[2]</sup></li>
</ul>
<h4 id="系统对比"><a href="#系统对比" class="headerlink" title="系统对比"></a>系统对比</h4><table>
<thead>
<tr>
<th align="center">系统</th>
<th align="center">优点</th>
<th align="center">缺点</th>
</tr>
</thead>
<tbody><tr>
<td align="center">ESXI</td>
<td align="center">大公司出品，主打稳定。远程管理。开箱即用。</td>
<td align="center">扩展性不如 PVE,可定制性和可操作性不如 PVE</td>
</tr>
<tr>
<td align="center">PVE</td>
<td align="center">基于 Debian，开源系统。高可定制性，高操作性。足够稳定</td>
<td align="center">界面友善度欠佳。需要基础 Linux 命令语句</td>
</tr>
</tbody></table>
<h3 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h3><p>本节中，默认服务器已经安装完 PVE 系统。</p>
<h4 id="服务搭建"><a href="#服务搭建" class="headerlink" title="服务搭建"></a>服务搭建</h4><ul>
<li>Jellyfin：本地影音库，可以搭配 NAS，Apple TV 等使用。也可以使用移动设备观影</li>
<li>TrueNAS：提供 NAS 服务，与 Jellyfin，PC，GitLab 等配合使用。</li>
<li>DNS：由于国内 DNS 污染泛滥，因此选择自己搭建。</li>
<li>GitLab：搭建本地代码库管理，配合 NAS 使用</li>
<li>WordPress：Blog，有前后端界面</li>
<li>Bitwarden：密码管理服务，在本地存储，安全性高</li>
<li>aria2：挂 bt，pt，还可以用来后台下载一些东西</li>
<li>私有游戏服务端：例如：MC，幻兽帕鲁等</li>
<li><del>Homeassistant：智能家居系统，由于没有自己的房子，所以暂时搁置</del></li>
<li>开发(<strong><font color="red">自行决定</font></strong>)：<ul>
<li>开发环境；<ol>
<li>Windows 10，Windows 11</li>
<li>Ubuntu Linux</li>
</ol>
</li>
<li>测试环境：<ol>
<li>Windows 10，Windows 11</li>
<li>Ubuntu Linux、</li>
</ol>
</li>
<li>数据库：Mysql + redis</li>
</ul>
</li>
<li>… …待补充</li>
</ul>
<h4 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h4><ul>
<li><input disabled="" type="checkbox"> <font color="blue">EXcaliDraw 流程图绘制</font></li>
<li><input disabled="" type="checkbox"> <font color="blue">Grafana 监控指标可视化</font></li>
<li><input disabled="" type="checkbox"> <font color="red">存储和计算分离</font></li>
<li><input disabled="" type="checkbox"> <font color="gray">CTF 靶场</font></li>
<li><input disabled="" type="checkbox"> <font color="gray">HA(Homeassistant)</font></li>
</ul>
<h2 id="TODO-1"><a href="#TODO-1" class="headerlink" title="TODO"></a>TODO</h2><ul>
<li><input disabled="" type="checkbox"> <font color="red">TrueNAS Deploy 文档编写</font></li>
<li><input disabled="" type="checkbox"> <font color="red">递归 DNS Deploy 文档编写</font></li>
<li><input disabled="" type="checkbox"> <font color="red">GitLab Deploy 文档编写</font></li>
<li><input disabled="" type="checkbox"> <font color="red">Jellyfin Deploy 文档编写</font></li>
<li><input disabled="" type="checkbox"> <font color="gray">WordPress Deploy 文档编写</font></li>
<li><input disabled="" type="checkbox"> <font color="red">aria2 Deploy 文档编写</font></li>
<li><input disabled="" type="checkbox"> <font color="red">Bitwarden Deploy 文档编写</font></li>
<li><input disabled="" type="checkbox"> <font color="gray">开发环境 安装配置 文档编写</font></li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li>[1] <a href="https://zh.wikipedia.org/wiki/VMware_ESXi">Wiki ESXI</a></li>
<li>[2] <a href="https://zh.wikipedia.org/wiki/Proxmox_Virtual_Environment">Wiki PVE</a></li>
<li>[3] <a href="https://v2ex.com/">V2ex</a></li>
<li>[4] <a href="https://bitwarden.com/help/">Bitwarden</a></li>
<li>[5] <a href="https://docs.docker.com/engine/install/">Docker</a></li>
<li>[6] <a href="https://docs.docker.com/compose/install/">Docker Compose</a></li>
</ul>
]]></content>
      <categories>
        <category>Home Server Center</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Learning</tag>
        <tag>Server</tag>
        <tag>Docker</tag>
        <tag>Home Server Center</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch linux 安装记录</title>
    <url>/Archinstall/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>因为 Windows 系统占用的 CPU，MEM 资源太多。我的老旧笔记本电脑无法完美使用，因此选择 Arch Linux 替换。</p>
<h2 id="为什么选择-Arch-Linux"><a href="#为什么选择-Arch-Linux" class="headerlink" title="为什么选择 Arch Linux"></a>为什么选择 Arch Linux</h2><span id="more"></span>

<p>之前在大学期间，使用过 Ubuntu，Manjaro Linux，deepin，这些系统都是内置很多我不需要的软件，所以 Arch Linux 可以让我定制安装什么软件，使用什么图形化界面。</p>
<h2 id="图形化界面选择"><a href="#图形化界面选择" class="headerlink" title="图形化界面选择"></a>图形化界面选择</h2><ul>
<li>如果爱折腾，可以选择 dwm，i3，awesome，bspwm，Qtile，herbstluftwm，IceWM，Sway，xmonad，Hyprland 等平铺式窗口管理器。这些都需要根据相关文档，配置快捷键。缺点是：配置很麻烦。优点是：可以抛弃鼠标所有的操作都可以在键盘上完成。~~~ps：如果不是老旧笔记本我会选择这个~~~</li>
<li>不建议使用 gnome，因为 Arch Linux 是滚动式更新，很可能会出现更新系统导致电脑无法开机。</li>
<li>如果不想折腾，可以使用 KDE，xfce 等窗口管理器。最后选择了使用 KDE + Wayland 作为笔记本的界面。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li>如果要在一块硬盘上安装双系统，请使用手动安装。</li>
<li>如果要在一块新硬盘上安装唯一系统，可以使用 Arch installer 自动脚本</li>
<li>系统分区：我是用的是 128G 固态硬盘，创建 3 个分区：<ul>
<li>efi：vfat，手动安装时，使用 <kbd>mkfs.vfat</kbd> 格式化。该分区作为系统引导分区使用，占用 800M。</li>
<li>root: ext4，手动安装时，使用<kbd>mkfs.ext4</kbd> 格式化。该分区作为&#x2F;目录使用，占用 50G。</li>
<li>home: ext4，手动安装时，使用 <kbd>mkfs.ext4</kbd> 格式化，该分区作为&#x2F;home 目录使用，占用剩余容量。</li>
</ul>
</li>
<li>安装之后，需要自己手动配置汉化和中文输入法。</li>
</ul>
<h2 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h2><ul>
<li><p>互联网：</p>
<ul>
<li>Firefox</li>
<li>Proxy 类软件</li>
<li>WireShark：抓包</li>
<li>wget</li>
<li>aria2</li>
</ul>
</li>
<li><p>音视频播放：</p>
<ul>
<li>VLC</li>
<li>网易云音乐</li>
</ul>
</li>
<li><p>编程：</p>
<ul>
<li>VSCode</li>
<li>JetBrains</li>
<li>neovim</li>
<li>Git</li>
<li>DBeaver：数据库连接软件</li>
</ul>
</li>
<li><p>系统工具：</p>
<ul>
<li>neofetch：系统信息查看，<a href="https://github.com/dylanaraps/neofetch">github</a></li>
<li>btop&#x2F;htop：资源监视器，<a href="https://github.com/aristocratos/btop">github</a></li>
<li>gparted：磁盘管理，分区管理</li>
</ul>
</li>
<li><p>输入法：</p>
<ul>
<li>fcitx5</li>
<li>搜狗输入法</li>
</ul>
</li>
<li><p>美化：</p>
<ul>
<li>Variety：壁纸，搭配<a href="https://wallhaven.cc/">壁纸网站</a>使用。</li>
<li>KDE 设置里面有主题设置~~~已经不喜欢类 MacOS 的主题了~~~</li>
</ul>
</li>
</ul>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul>
<li><strong><font color="red">Arch installer 自动脚本安装时，建议仅安装系统，不要安装图形化界面，因为在旧电脑安装可能出现某部分图形化需要的包无法安装。导致系统安装失败。</font></strong></li>
<li><strong><font color="red">Arch Linux 在更新前建议充分了解更新事项，做好系统备份，防止重要数据丢失</font></strong></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Arch linux</tag>
        <tag>Linux</tag>
        <tag>System</tag>
      </tags>
  </entry>
  <entry>
    <title>TODO</title>
    <url>/TODO/</url>
    <content><![CDATA[<h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><p>TODO 列表，重要性分级：<font color="red">高优先级</font>，<font color="blue">普通级</font>，<font color="gray">低优先级</font>。<br>不会再在文章中出现该句解释</p>
<span id="more"></span>

<ul>
<li><input disabled="" type="checkbox"> <font color="red">韩语学习</font></li>
<li><input disabled="" type="checkbox"> <font color="red">Topic 考试，努力考上 6 级</font></li>
<li><input disabled="" type="checkbox"> <font color="red">韩国计算机留学</font></li>
<li><input disabled="" type="checkbox"> <font color="blue">学习金融，量化，努力赚钱，努力攒钱</font></li>
<li><input disabled="" type="checkbox"> <font color="blue">学着用 blog 记录自己学习和折腾的经历</font></li>
</ul>
]]></content>
      <categories>
        <category>TODO</category>
      </categories>
      <tags>
        <tag>TODO</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Github actions 向 Cloudflare Pages 上传网页</title>
    <url>/CFPages/</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ul>
<li><ol>
<li>简洁</li>
</ol>
</li>
<li><ol start="2">
<li>提供搜索栏</li>
</ol>
</li>
<li><ol start="3">
<li>无广告</li>
</ol>
</li>
</ul>
<h2 id="代码部署"><a href="#代码部署" class="headerlink" title="代码部署"></a>代码部署</h2><span id="more"></span>

<ul>
<li><ol>
<li>整体流程：</li>
</ol>
<ul>
<li>代码部署再 GitHub 私有库中，使用 Github Actions 在触发 push 到 main 分支时，启动 workflows 将 html 文件推送到 Cloudflare Pages 项目中。</li>
</ul>
</li>
<li><ol start="2">
<li>事前准备：</li>
</ol>
<ul>
<li><ol>
<li>Github 账户</li>
</ol>
</li>
<li><ol start="2">
<li>Cloud flare 账户</li>
</ol>
</li>
<li><ol start="3">
<li>Cloud flare 有 Cloud flare Pages 编辑权限的 Token</li>
</ol>
</li>
<li><ol start="4">
<li>Github 私有仓库一个</li>
</ol>
</li>
<li><ol start="5">
<li>准备好的 HTML 项目</li>
</ol>
</li>
</ul>
</li>
<li><ol start="3">
<li>实现：</li>
</ol>
<ul>
<li><ol>
<li>向 Github 仓库中添加 3 个变量 <kbd>CF_TOKEN</kbd><kbd>CF_ID</kbd><kbd>CF_NAME</kbd><br>这三个变量来源分别为： - CF_ID: 在访问<a href="https://dash.cloudflare.com/">cloudflare</a>时，浏览器网址栏形如：<a href="https://dash.cloudflare.com/******%E3%80%82%E5%85%B6%E4%B8%AD**/*/">https://dash.cloudflare.com/******。其中**\*\</a>*** 就是你的 ID。<br> <img src="https://git.c0despace.uk/https://raw.githubusercontent.com/zywj0han9/Img-bed/master/imgs/CF_ID.png" alt="CF_ID"><ul>
<li>CF_TOKEN: 登录成功后，在<kbd>个人资料</kbd><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.181ex" role="img" focusable="false" viewBox="0 -511 1000 522"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g></g></g></svg></mjx-container><kbd>API 令牌</kbd><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.181ex" role="img" focusable="false" viewBox="0 -511 1000 522"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g></g></g></svg></mjx-container><kbd>创建令牌</kbd>中创建一个拥有 Cloud flare Pages 编辑权限的 Token。<br><img src="https://git.c0despace.uk/https://raw.githubusercontent.com/zywj0han9/Img-bed/master/imgs/CF_TOKEN1.png" alt="CF_TOKEN"><br> <img src="https://git.c0despace.uk/https://raw.githubusercontent.com/zywj0han9/Img-bed/master/imgs/CF_TOKEN2.png" alt="CF_TOKEN"><br> <img src="https://git.c0despace.uk/https://raw.githubusercontent.com/zywj0han9/Img-bed/master/imgs/CF_TOKEN3.png" alt="CF_TOKEN"></li>
<li>CF_NAME: <a href="https://pages.cloudflare.com/">Cloudflare Pages</a> 进入 Cloud flare Pages 页面创建一个 Pages 项目<br> <img src="https://git.c0despace.uk/https://raw.githubusercontent.com/zywj0han9/Img-bed/master/imgs/CF_NAME1.png" alt="CF_NAME"><br> 选择上传资产<br> <img src="https://git.c0despace.uk/https://raw.githubusercontent.com/zywj0han9/Img-bed/master/imgs/CF_NAME2.png" alt="CF_NAME"><br> 输入项目名，这个就是 CF_NAME<br><img src="https://git.c0despace.uk/https://raw.githubusercontent.com/zywj0han9/Img-bed/master/imgs/CF_NAME3.png" alt="CF_NAME"><br>这时，Cloud flare 已经将 Pages 项目创建好了。已经可以接受 Github actions push 代码过来显示了。</li>
</ul>
</li>
</ol>
</li>
<li><ol start="2">
<li><p>在本地 git clone 下来你的仓库。<br>创建.github/workflows/${ Your File Name }.yml</p>
<pre><code>    name: 部署 cloudflare Pages 个人落地页
    on:
    push:
        branches:
        - main

    jobs:
        publish:
            runs-on: ubuntu-latest
            permissions:
                contents: read
                deployments: write
            name: Publish to Cloudflare Pages
            steps:
                - name: Checkout
                uses: actions/checkout@v3

                    # Run a build step here if your project requires

                - name: Publish to Cloudflare Pages
                uses: cloudflare/pages-action@v1
                with:
                    apiToken: ${{ secrets.CF_TOKEN }}
                    accountId: ${{ secrets.CF_ID }}
                    projectName: ${{ secrets.CF_NAME }}
                    directory: ***
                    wranglerVersion: '3'
</code></pre>
<p><strong><em>注意：将</em></strong> <kbd>directory:</kbd>，<kbd>branches:</kbd><strong><em>部分根据实际情况更换</em></strong></p>
</li>
</ol>
</li>
<li><ol start="3">
<li>最后将本地仓库 push 到 GitHub 中就完成了。</li>
</ol>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Cloudflare</category>
      </categories>
      <tags>
        <tag>Cloudflare</tag>
        <tag>Cloudflare Page</tag>
        <tag>Github Action</tag>
        <tag>Github</tag>
      </tags>
  </entry>
</search>
