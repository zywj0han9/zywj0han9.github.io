<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>J0han9</title>
  
  <subtitle>J0han9的随笔</subtitle>
  <link href="https://zywj0han9.github.io/atom.xml" rel="self"/>
  
  <link href="https://zywj0han9.github.io/"/>
  <updated>2024-09-07T08:34:35.641Z</updated>
  <id>https://zywj0han9.github.io/</id>
  
  <author>
    <name>J0han9</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Arch linux 安装记录</title>
    <link href="https://zywj0han9.github.io/Archinstall/"/>
    <id>https://zywj0han9.github.io/Archinstall/</id>
    <published>2024-09-07T08:32:40.000Z</published>
    <updated>2024-09-07T08:34:35.641Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>因为 Windows 系统占用的 CPU，MEM 资源太多。我的老旧笔记本电脑无法完美使用，因此选择 Arch Linux 替换。</p><h2 id="为什么选择-Arch-Linux"><a href="#为什么选择-Arch-Linux" class="headerlink" title="为什么选择 Arch Linux"></a>为什么选择 Arch Linux</h2><span id="more"></span><p>之前在大学期间，使用过 Ubuntu，Manjaro Linux，deepin，这些系统都是内置很多我不需要的软件，所以 Arch Linux 可以让我定制安装什么软件，使用什么图形化界面。</p><h2 id="图形化界面选择"><a href="#图形化界面选择" class="headerlink" title="图形化界面选择"></a>图形化界面选择</h2><ul><li>如果爱折腾，可以选择 dwm，i3，awesome，bspwm，Qtile，herbstluftwm，IceWM，Sway，xmonad，Hyprland 等平铺式窗口管理器。这些都需要根据相关文档，配置快捷键。缺点是：配置很麻烦。优点是：可以抛弃鼠标所有的操作都可以在键盘上完成。~~~ps：如果不是老旧笔记本我会选择这个~~~</li><li>不建议使用 gnome，因为 Arch Linux 是滚动式更新，很可能会出现更新系统导致电脑无法开机。</li><li>如果不想折腾，可以使用 KDE，xfce 等窗口管理器。最后选择了使用 KDE + Wayland 作为笔记本的界面。</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li>如果要在一块硬盘上安装双系统，请使用手动安装。</li><li>如果要在一块新硬盘上安装唯一系统，可以使用 Arch installer 自动脚本</li><li>系统分区：我是用的是 128G 固态硬盘，创建 3 个分区：<ul><li>efi：vfat，手动安装时，使用 <kbd>mkfs.vfat</kbd> 格式化。该分区作为系统引导分区使用，占用 800M。</li><li>root: ext4，手动安装时，使用**<kbd>mkfs.ext4</kbd> 格式化。该分区作为&#x2F;目录使用，占用 50G。</li><li>home: ext4，手动安装时，使用 <kbd>mkfs.ext4</kbd> 格式化，该分区作为&#x2F;home 目录使用，占用剩余容量。</li></ul></li><li>安装之后，需要自己手动配置汉化和中文输入法。</li></ul><h2 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h2><ul><li><p>互联网：</p><ul><li>Firefox</li><li>Proxy 类软件</li><li>WireShark：抓包</li><li>wget</li><li>aria2</li></ul></li><li><p>音视频播放：</p><ul><li>VLC</li><li>网易云音乐</li></ul></li><li><p>编程：</p><ul><li>VSCode</li><li>JetBrains</li><li>neovim</li><li>Git</li><li>DBeaver：数据库连接软件</li></ul></li><li><p>系统工具：</p><ul><li>neofetch：系统信息查看，<a href="https://github.com/dylanaraps/neofetch">github</a></li><li>btop&#x2F;htop：资源监视器，<a href="https://github.com/aristocratos/btop">github</a></li><li>gparted：磁盘管理，分区管理</li></ul></li><li><p>输入法：</p><ul><li>fcitx5</li><li>搜狗输入法</li></ul></li><li><p>美化：</p><ul><li>Variety：壁纸，搭配<a href="https://wallhaven.cc/">壁纸网站</a>使用。</li><li>KDE 设置里面有主题设置~~~已经不喜欢类 MacOS 的主题了~~~</li></ul></li></ul><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li><strong><font color="red">Arch installer 自动脚本安装时，建议仅安装系统，不要安装图形化界面，因为在旧电脑安装可能出现某部分图形化需要的包无法安装。导致系统安装失败。</font></strong></li><li><strong><font color="red">Arch Linux 在更新前建议充分了解更新事项，做好系统备份，防止重要数据丢失</font></strong></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;因为 Windows 系统占用的 CPU，MEM 资源太多。我的老旧笔记本电脑无法完美使用，因此选择 Arch Linux 替换。&lt;/p&gt;
&lt;h2 id=&quot;为什么选择-Arch-Linux&quot;&gt;&lt;a href=&quot;#为什么选择-Arch-Linux&quot; class=&quot;headerlink&quot; title=&quot;为什么选择 Arch Linux&quot;&gt;&lt;/a&gt;为什么选择 Arch Linux&lt;/h2&gt;</summary>
    
    
    
    <category term="Arch Linux" scheme="https://zywj0han9.github.io/categories/Arch-Linux/"/>
    
    
    <category term="Arch linux" scheme="https://zywj0han9.github.io/tags/Arch-linux/"/>
    
    <category term="Linux" scheme="https://zywj0han9.github.io/tags/Linux/"/>
    
    <category term="System" scheme="https://zywj0han9.github.io/tags/System/"/>
    
  </entry>
  
  <entry>
    <title>使用 Github actions 向 Cloudflare Pages 上传网页</title>
    <link href="https://zywj0han9.github.io/CFPages/"/>
    <id>https://zywj0han9.github.io/CFPages/</id>
    <published>2024-08-24T06:44:08.000Z</published>
    <updated>2024-09-07T08:34:35.641Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ul><li><ol><li>简洁</li></ol></li><li><ol start="2"><li>提供搜索栏</li></ol></li><li><ol start="3"><li>无广告</li></ol></li></ul><h2 id="代码部署"><a href="#代码部署" class="headerlink" title="代码部署"></a>代码部署</h2><span id="more"></span><ul><li><ol><li>整体流程：</li></ol><ul><li>代码部署再 GitHub 私有库中，使用 Github Actions 在触发 push 到 main 分支时，启动 workflows 将 html 文件推送到 Cloudflare Pages 项目中。</li></ul></li><li><ol start="2"><li>事前准备：</li></ol><ul><li><ol><li>Github 账户</li></ol></li><li><ol start="2"><li>Cloud flare 账户</li></ol></li><li><ol start="3"><li>Cloud flare 有 Cloud flare Pages 编辑权限的 Token</li></ol></li><li><ol start="4"><li>Github 私有仓库一个</li></ol></li><li><ol start="5"><li>准备好的 HTML 项目</li></ol></li></ul></li><li><ol start="3"><li>实现：</li></ol><ul><li><ol><li>向 Github 仓库中添加 3 个变量 <kbd>CF_TOKEN</kbd><kbd>CF_ID</kbd><kbd>CF_NAME</kbd><br>这三个变量来源分别为： - CF_ID: 在访问<a href="https://dash.cloudflare.com/">cloudflare</a>时，浏览器网址栏形如：<a href="https://dash.cloudflare.com/******%E3%80%82%E5%85%B6%E4%B8%AD**/*/">https://dash.cloudflare.com/******。其中**\*\</a>*** 就是你的 ID。<br> <img src="/images/CF_ID.png" alt="CF_ID">  <ul><li>CF_TOKEN: 登录成功后，在<kbd>个人资料</kbd><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.181ex" role="img" focusable="false" viewBox="0 -511 1000 522"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g></g></g></svg></mjx-container><kbd>API 令牌</kbd><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.181ex" role="img" focusable="false" viewBox="0 -511 1000 522"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g></g></g></svg></mjx-container><kbd>创建令牌</kbd>中创建一个拥有 Cloud flare Pages 编辑权限的 Token。<br><img src="/images/CF_TOKEN1.png" alt="CF_TOKEN"><br> <img src="/images/CF_TOKEN2.png" alt="CF_TOKEN"><br> <img src="/images/CF_TOKEN3.png" alt="CF_TOKEN">  </li><li>CF_NAME: <a href="https://pages.cloudflare.com/">Cloudflare Pages</a> 进入 Cloud flare Pages 页面创建一个 Pages 项目<br> <img src="/images/CF_NAME1.png" alt="CF_NAME"><br> 选择上传资产<br> <img src="/images/CF_NAME2.png" alt="CF_NAME"><br> 输入项目名，这个就是 CF_NAME<br><img src="/images/CF_NAME3.png" alt="CF_NAME"><br>这时，Cloud flare 已经将 Pages 项目创建好了。已经可以接受 Github actions push 代码过来显示了。</li></ul></li></ol></li><li><ol start="2"><li><p>在本地 git clone 下来你的仓库。<br>创建.github/workflows/${ Your File Name }.yml</p><pre><code>    name: 部署 cloudflare Pages 个人落地页    on:    push:        branches:        - main    jobs:        publish:            runs-on: ubuntu-latest            permissions:                contents: read                deployments: write            name: Publish to Cloudflare Pages            steps:                - name: Checkout                uses: actions/checkout@v3                    # Run a build step here if your project requires                - name: Publish to Cloudflare Pages                uses: cloudflare/pages-action@v1                with:                    apiToken: ${{ secrets.CF_TOKEN }}                    accountId: ${{ secrets.CF_ID }}                    projectName: ${{ secrets.CF_NAME }}                    directory: ***                    wranglerVersion: '3'</code></pre><p><strong><em>注意：将</em></strong> <kbd>directory:</kbd>，<kbd>branches:</kbd><strong><em>部分根据实际情况更换</em></strong></p></li></ol></li><li><ol start="3"><li>最后将本地仓库 push 到 GitHub 中就完成了。</li></ol></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;简洁&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;提供搜索栏&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;无广告&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码部署&quot;&gt;&lt;a href=&quot;#代码部署&quot; class=&quot;headerlink&quot; title=&quot;代码部署&quot;&gt;&lt;/a&gt;代码部署&lt;/h2&gt;</summary>
    
    
    
    <category term="Cloudflare" scheme="https://zywj0han9.github.io/categories/Cloudflare/"/>
    
    
    <category term="Cloudflare" scheme="https://zywj0han9.github.io/tags/Cloudflare/"/>
    
    <category term="Cloudflare Page" scheme="https://zywj0han9.github.io/tags/Cloudflare-Page/"/>
    
    <category term="Github Action" scheme="https://zywj0han9.github.io/tags/Github-Action/"/>
    
    <category term="Github" scheme="https://zywj0han9.github.io/tags/Github/"/>
    
  </entry>
  
</feed>
